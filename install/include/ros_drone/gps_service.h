// Generated by gencpp from file ros_drone/gps_service.msg
// DO NOT EDIT!


#ifndef ROS_DRONE_MESSAGE_GPS_SERVICE_H
#define ROS_DRONE_MESSAGE_GPS_SERVICE_H

#include <ros/service_traits.h>


#include <ros_drone/gps_serviceRequest.h>
#include <ros_drone/gps_serviceResponse.h>


namespace ros_drone
{

struct gps_service
{

typedef gps_serviceRequest Request;
typedef gps_serviceResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct gps_service
} // namespace ros_drone


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::ros_drone::gps_service > {
  static const char* value()
  {
    return "a201f4861e6d926088e38acf72100f46";
  }

  static const char* value(const ::ros_drone::gps_service&) { return value(); }
};

template<>
struct DataType< ::ros_drone::gps_service > {
  static const char* value()
  {
    return "ros_drone/gps_service";
  }

  static const char* value(const ::ros_drone::gps_service&) { return value(); }
};


// service_traits::MD5Sum< ::ros_drone::gps_serviceRequest> should match 
// service_traits::MD5Sum< ::ros_drone::gps_service > 
template<>
struct MD5Sum< ::ros_drone::gps_serviceRequest>
{
  static const char* value()
  {
    return MD5Sum< ::ros_drone::gps_service >::value();
  }
  static const char* value(const ::ros_drone::gps_serviceRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::ros_drone::gps_serviceRequest> should match 
// service_traits::DataType< ::ros_drone::gps_service > 
template<>
struct DataType< ::ros_drone::gps_serviceRequest>
{
  static const char* value()
  {
    return DataType< ::ros_drone::gps_service >::value();
  }
  static const char* value(const ::ros_drone::gps_serviceRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::ros_drone::gps_serviceResponse> should match 
// service_traits::MD5Sum< ::ros_drone::gps_service > 
template<>
struct MD5Sum< ::ros_drone::gps_serviceResponse>
{
  static const char* value()
  {
    return MD5Sum< ::ros_drone::gps_service >::value();
  }
  static const char* value(const ::ros_drone::gps_serviceResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::ros_drone::gps_serviceResponse> should match 
// service_traits::DataType< ::ros_drone::gps_service > 
template<>
struct DataType< ::ros_drone::gps_serviceResponse>
{
  static const char* value()
  {
    return DataType< ::ros_drone::gps_service >::value();
  }
  static const char* value(const ::ros_drone::gps_serviceResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // ROS_DRONE_MESSAGE_GPS_SERVICE_H
